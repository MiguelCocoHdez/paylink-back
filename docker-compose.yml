version: '3.9'

services:

  #BASES DE DATOS:
  auth-db:
    image: postgres:17
    container_name: auth-db
    environment:
      POSTGRES_DB: paylink_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - paylink-net
    volumes:
      - auth_data:/var/lib/postgresql/data

  user-db:
    image: postgres:17
    container_name: user-db
    environment:
      POSTGRES_DB: paylink_user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - paylink-net
    volumes:
      - user_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:7.8.3
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - paylink-net

    environment:
      KAFKA_CRAFT_MODE: 'true'
      CLUSTER_ID: '213JHJAasdf-eDSF1'
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker, controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

    volumes:
      - kafka_kraft:/var/lib/kafka/data

  config-service:
    build: ./microservice-config-paylink
    container_name: config-service
    ports:
      - "8888:8888"
    networks:
      - paylink-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-service:
    build: ./microservice-eureka-paylink
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - paylink-net
    depends_on:
      config-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  auth-service:
    build: ./microservice-auth-paylink
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - paylink-net
    depends_on:
      eureka-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/paylink_auth
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - JWT_PASSWORD=${JWT_PASSWORD}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  
  user-service:
    build: ./microservice-user-paylink
    container_name: user-service
    ports:
      - "8082:8082"
    networks:
      - paylink-net
    depends_on:
      eureka-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/paylink_user
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

volumes:
  kafka_kraft:
  auth_data:
  user_data:

networks:
  paylink-net:
    driver: bridge